name: Generate and Commit Table

on:
  # Scheduled to run on the 1st of each month
  schedule:
    - cron: '0 0 1 * *'  # Runs at midnight UTC on the 1st of each month
  # For testing purposes, also trigger on push to main branch
  push:
    branches:
      - main

jobs:
  generate-table:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'

      # Step 3: Install required dependencies
      - name: Install dependencies
        run: |
          pip install pandas pykg2tbl requests numpy

      # Step 4: Run the Python script that generates the table
      - name: Run table generator script
        run: python files/BODC_tables_generator.py

      # Step 5: Set up R environment
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.3'  # Set to the R version you need

      # Step 6: Install R dependencies (usethis package)
      - name: Install R packages
        run: |
          Rscript -e 'install.packages("usethis")'
          Rscript -e 'install.packages("devtools")'

      # Step 7: Read the CSV files in R and run the usethis::use_data() commands
      - name: Process CSV files with R
        run: |
          Rscript -e 'BODCunits <- read.csv("files/BODCunits.csv")'
          Rscript -e 'BODCvalues <- read.csv("files/BODCvalues.csv")'
          Rscript -e 'BODCparameters <- read.csv("files/BODCparameters.csv")'
          Rscript -e 'usethis::use_data(BODCunits, overwrite = TRUE)'
          Rscript -e 'usethis::use_data(BODCvalues, overwrite = TRUE)'
          Rscript -e 'usethis::use_data(BODCparameters, overwrite = TRUE)'
          Rscript -e 'devtools::document()'

      # Step 8: Run devtools::document() to update R package documentation
      - name: Update R documentation
        run: |
          Rscript -e 'devtools::document()'
          
      # Step 9: Commit and push the changes (if any)
      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update datasets (auto-generated by GitHub Action)"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
